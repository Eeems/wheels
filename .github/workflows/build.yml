name: Build Wheels
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  release:
    types: [released]
permissions: read-all
jobs:
  standard:
    name: ${{ matrix.package }}-py${{ matrix.python}}-${{ matrix.build_on }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - cffi
          - crcmod
          - nuitka
          - protobuf
          - zstandard
          - pynacl
        python:
          - '3.12'
          - '3.11'
          - '3.10'
          - '3.9'
        build_on:
          - ubuntu-amd64
          - debian-armv7l
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v4
      - name: Build ${{ matrix.package }}
        uses: ./
        with:
          name: ${{ matrix.package }}
          build_on: ${{ matrix.build_on }}
          python_version: ${{ matrix.python }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-py${{ matrix.python}}-${{ matrix.build_on }}
          path: dist
          if-no-files-found: error
  standard-3_11:
    name: ${{ matrix.package }}-py${{ matrix.python}}-${{ matrix.build_on }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - remarkable-update-image
          - remarkable-update-fuse
        python:
          - '3.12'
          - '3.11'
        build_on:
          - ubuntu-amd64
          - debian-armv7l
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v4
      - name: Build ${{ matrix.package }}
        uses: ./
        with:
          name: ${{ matrix.package }}
          build_on: ${{ matrix.build_on }}
          python_version: ${{ matrix.python }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-py${{ matrix.python}}-${{ matrix.build_on }}
          path: dist
          if-no-files-found: error
  wxpython:
    name: ${{ matrix.package }}-py${{ matrix.python}}-${{ matrix.build_on }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - wxpython
        python:
          - '3.12'
          - '3.11'
        build_on:
          - ubuntu-amd64
          - debian-armv7l
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v4
      - name: Build ${{ matrix.package }}
        uses: ./
        with:
          name: ${{ matrix.package }}
          build_on: ${{ matrix.build_on }}
          python_version: ${{ matrix.python }}
          setup: |
            export DEBIAN_FRONTEND="noninteractive"
            sudo apt-get update
            sudo apt-get upgrade -y
            sudo apt-get install -y \
              dpkg-dev \
              build-essential \
              python3-dev \
              freeglut3-dev \
              libgl1-mesa-dev \
              libglu1-mesa-dev \
              libgstreamer-plugins-base1.0-dev \
              libgtk-3-dev \
              libjpeg-dev \
              libnotify-dev \
              libpng-dev \
              libsdl2-dev \
              libsm-dev \
              libtiff-dev \
              libwebkit2gtk-4.0-dev \
              libxtst-dev
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-py${{ matrix.python}}-${{ matrix.build_on }}
          path: dist
          if-no-files-found: error
  rust:
    name: ${{ matrix.package }}-py${{ matrix.python}}-${{ matrix.build_on }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - cryptography
          - bcrypt
        python:
          - '3.12'
          - '3.11'
          - '3.10'
          - '3.9'
        build_on:
          - ubuntu-amd64
          - debian-armv7l
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v4
      - name: Build ${{ matrix.package }}
        uses: ./
        with:
          name: ${{ matrix.package }}
          build_on: ${{ matrix.build_on }}
          python_version: ${{ matrix.python }}
          setup: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source ~/.cargo/env
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-py${{ matrix.python}}-${{ matrix.build_on }}
          path: dist
          if-no-files-found: error
  universal:
    name: ${{ matrix.package }}-py2.py3-none-any
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - exodus-bundler
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v4
      - name: Build ${{ matrix.package }}
        uses: ./
        with:
          name: ${{ matrix.package }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-py2.py3-none-any
          path: dist
          if-no-files-found: error
